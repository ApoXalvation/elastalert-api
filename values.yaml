# number of replicas to run
replicaCount: 1

# number of helm release revisions to retain
revisionHistoryLimit: 5

# Default internal between alert checks against the elasticsearch datasource, in minutes
runIntervalMins: 1

# Default rule buffer duration, in minutes
bufferTimeMins: 15

# Amount of time to retry and deliver failed alerts (1440 minutes per day)
alertRetryLimitMins: 2880

# Default time before realerting, in minutes
realertIntervalMins: ""

# For ES 5: The name of the index which stores elastalert's statuses
# For ES 6: The prefix of the names of indices which store elastalert's statuses.
#
# See https://github.com/Yelp/elastalert/commit/c250100b7be07c68a53789569a86f87193ec37f4 for more details about this differentiation.
#
# CAUTION: It is recommended to set this to `elastalert` for ES6+. Otherwise elastalert produces confusing index names due to https://github.com/Yelp/elastalert/issues/1479#issuecomment-356380179
writebackIndex: elastalert_status

image:
  # docker image
  repository: jertel/elastalert-docker
  # docker image tag
  tag: 0.1.39
  pullPolicy: IfNotPresent
resources: {}

persistence:
  size: 5Gi
  storageClass: ""

settings:
  # The name used by the logging framework.
  appName: "elastalert-server"
  # The port to bind to
  port: 3030
  # The port to bind to for websockets
  wsport: 3333
  # The path to the root ElastAlert folder. It's the folder that contains the `setup.py` script.
  elastalertPath: "/opt/elastalert" 
  # Optional date to start querying from
  start: "2014-01-01T00:00:00"
  # Optional date to stop querying at
  end: "2016-01-01T00:00:00"
  # Optionalwill increase the logging verbosenesswhich allows you to see information about the state of queries.
  verbose: true
  # Optionalwill enable logging for all queries made to Elasticsearch
  es_debug: true
  # Will run ElastAlert in debug mode. This will increase the logging verbosenesschange all alerts to DebugAlerterwhich prints alerts and suppresses their normal actionand skips writing search and alert metadata back to Elasticsearch.
  debug: false
  # The path to the rules folder containing all the rules. If the folder is empty a dummy file will be created to allow ElastAlert to start.
  rulesPath: 
  # Whether to use a path relative to the `elastalertPath` folder.
    relative: true
  # The path to the rules folder. 
    path: "/rules" 
  # The path to the rules folder containing all the rule templates. If the folder is empty a dummy file will be created to allow ElastAlert to start.
  templatesPath: 
  # Whether to use a path relative to the `elastalertPath` folder.
    relative: true
  # The path to the rule templates folder.
    path: "/rule_templates" 
  # The path to a folder that the server can use to store data and temporary files.
  dataPath: 
  # Whether to use a path relative to the `elastalertPath` folder.
    relative: true
  # The path to the data folder.
    path: "/server_data" 
  # For getting metadata and field mappingsconnect to this ES server
  es_host: "localhost"
  # Port for above
  es_port: 9200
  # Writeback index to examine for /metadata endpoint
  writeback_index: "elastalert_status" 

elasticsearch:
  # elasticsearch endpoint e.g. (svc.namespace||svc)
  host: ""
  # elasticsearch port
  port: 80
  # whether or not to connect to es_host using TLS
  useSsl: "False"
  # Username if authenticating to ES with basic auth
  username: ""
  # Password if authenticating to ES with basic auth
  password: ""
  # whether or not to verify TLS certificates
  verifyCerts: "True"
  # Enable certificate based authentication
  # path to a PEM certificate to use as the client certificate
  # clientCert: "/certs/client.pem"
  # path to a private key file to use as the client key
  # clientKey: "/certs/client-key.pem"
  # path to a CA cert bundle to use to verify SSL connections
  # caCerts: "/certs/ca.pem"
  # # certs volumes, required to mount ssl certificates when elasticsearch has tls enabled
  # certsVolumes:
  #   - name: es-certs
  #     secret:
  #       defaultMode: 420
  #       secretName: es-certs
  # # mount certs volumes, required to mount ssl certificates when elasticsearch has tls enabled
  # certsVolumeMounts:
  #   - name: es-certs
  #     mountPath: /certs
  #     readOnly: true

extraConfigOptions: {}
  # # Options to propagate to all rules, e.g. a common slack_webhook_url or kibana_url
  # # Please note at the time of implementing this value, it will not work for required_locals
  # # Which MUST be set at the rule level, these are: ['alert', 'type', 'name', 'index']
  # generate_kibana_link: true
  # kibana_url: https://kibana.yourdomain.com
  # slack_webhook_url: dummy

# Command and args override for container e.g. (https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/)
# command: ["YOUR_CUSTOM_COMMAND"]
# args: ["YOUR", "CUSTOM", "ARGS"]

# rule configurations e.g. (http://elastalert.readthedocs.io/en/latest/)
rules: {}
  # deadman_slack: |-
  #   ---
  #   name: Deadman Switch Slack
  #   type: frequency
  #   index: containers-*
  #   num_events: 3
  #   timeframe:
  #     minutes: 3
  #   filter:
  #   - term:
  #       message: "deadmanslack"
  #   alert:
  #   - "slack"
  #   slack:
  #   slack_webhook_url: dummy
  # deadman_pagerduty: |-
  #   ---
  #   name: Deadman Switch PagerDuty
  #   type: frequency
  #   index: containers-*
  #   num_events: 3
  #   timeframe:
  #     minutes: 3
  #   filter:
  #   - term:
  #       message: "deadmanpd"
  #   alert:
  #   - "pagerduty"
  #   pagerduty:
  #   pagerduty_service_key: dummy
  #   pagerduty_client_name: Elastalert Deadman Switch

# Support using node selectors and tolerations
# nodeSelector:
#   "node-role.kubernetes.io/infra_worker": "true"
nodeSelector: {}
# tolerations:
#   - key: "node_role"
#     operator: "Equal"
#     value: "infra_worker"
#     effect: "NoSchedule"
tolerations: []

extraVolumes: []
  # - name: smtp-auth
  #   secret:
  #     secretName: elastalert-smtp-auth
  #     items:
  #       - key: smtp_auth.yaml
  #         path: smtp_auth.yaml
  #         mode: 0400

extraVolumeMounts: []
  # - name: smtp-auth
  #   mountPath: /opt/config-smtp/smtp_auth.yaml
  #   subPath: smtp_auth.yaml
  #   readOnly: true
  #
command: ['sh', '-c', 'apk add py2-pip && pip install elasticsearch==6.3.1 &&  npm start']
